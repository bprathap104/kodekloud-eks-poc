# 1. Create Storage Class
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-sc
  namespace: default
provisioner: ebs.csi.aws.com
volumeBindingMode: WaitForFirstConsumer
parameters:
  type: gp3
  encrypted: "true"
---
# 2. Create Persistent Volume, Make sure the volume is created in right availability zone where node is running
apiVersion: v1
kind: PersistentVolume
metadata:
  name: ebs-static-pv
  namespace: default
spec:
  capacity:
    storage: 8Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ebs-sc
  csi:
    driver: ebs.csi.aws.com
    volumeHandle: vol-0a6d2c09def246385
    fsType: ext4
---
# 3. Create Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-static-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: ebs-sc
---
# 4. Sample Pod using the PVC
apiVersion: v1
kind: Pod
metadata:
  name: app-pod
  namespace: default
spec:
  nodeSelector:
    kubernetes.io/hostname: 'ip-172-31-6-18.ec2.internal'
  containers:
    - name: app
      image: nginx
      volumeMounts:
        - name: ebs-storage
          mountPath: /data
  volumes:
    - name: ebs-storage
      persistentVolumeClaim:
        claimName: ebs-static-pvc
---
# Dynamic volume
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ebs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 11Gi
  storageClassName: ebs-sc
---
## Test pod for dynamic volume provisioning
apiVersion: v1
kind: Pod
metadata:
  name: ebs-test-pod
spec:
  containers:
  - name: app
    image: nginx
    volumeMounts:
    - mountPath: "/data"
      name: ebs-volume
  volumes:
  - name: ebs-volume
    persistentVolumeClaim:
      claimName: ebs-pvc

## emptyDir volume example
apiVersion: v1
kind: Pod
metadata:
  name: emptydir-example
spec:
  containers:
  - name: app-container
    image: nginx
    volumeMounts:
    - mountPath: /usr/share/nginx/html
      name: shared-data
  - name: worker-container
    image: busybox
    command: [ "sh", "-c", "echo 'Hello from worker' > /data/message; sleep 3600" ]
    volumeMounts:
    - mountPath: /data
      name: shared-data
  volumes:
  - name: shared-data
    emptyDir: {}
